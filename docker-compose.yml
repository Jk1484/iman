version: '3.8'

services:
  api_gateway:
    container_name: api_gateway
    restart: always
    build: 
      context: .
      dockerfile: cmd/api_gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - crawler_service
      - post_service
    networks:
      - backend

  crawler_service:
    container_name: crawler_service
    restart: always
    build:
      context: .
      dockerfile: cmd/crawler_service/Dockerfile
    ports:
      - "9000:9000"
    networks:
      - backend
    depends_on:
      - database
    
  post_service:
    container_name: post_service
    restart: always
    build:
      context: .
      dockerfile: cmd/post_service/Dockerfile
    ports:
      - "9001:9001"
    networks:
      - backend
    depends_on:
      - database

  database:
    image: postgres:latest
    container_name: database
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=iman
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

volumes:
  postgres:

networks:
  backend:
    driver: bridge